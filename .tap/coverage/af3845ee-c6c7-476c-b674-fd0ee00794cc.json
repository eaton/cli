{
  "result": [
    {
      "scriptId": "312",
      "url": "file:///Volumes/migration/@eatonfyi/cli/src/status-tracker.ts",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 0,
              "endOffset": 14523,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [
            {
              "startOffset": 91,
              "endOffset": 4090,
              "count": 2
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "StatusTracker",
          "ranges": [
            {
              "startOffset": 182,
              "endOffset": 409,
              "count": 2
            },
            {
              "startOffset": 366,
              "endOffset": 403,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get status",
          "ranges": [
            {
              "startOffset": 557,
              "endOffset": 606,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "start",
          "ranges": [
            {
              "startOffset": 654,
              "endOffset": 797,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "stop",
          "ranges": [
            {
              "startOffset": 886,
              "endOffset": 1032,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "reset",
          "ranges": [
            {
              "startOffset": 1136,
              "endOffset": 1294,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "update",
          "ranges": [
            {
              "startOffset": 1383,
              "endOffset": 1690,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "get message",
          "ranges": [
            {
              "startOffset": 1766,
              "endOffset": 1822,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "set message",
          "ranges": [
            {
              "startOffset": 1930,
              "endOffset": 1992,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "get value",
          "ranges": [
            {
              "startOffset": 2122,
              "endOffset": 2192,
              "count": 6
            },
            {
              "startOffset": 2177,
              "endOffset": 2181,
              "count": 0
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "set value",
          "ranges": [
            {
              "startOffset": 2197,
              "endOffset": 2413,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "get target",
          "ranges": [
            {
              "startOffset": 2467,
              "endOffset": 2539,
              "count": 5
            },
            {
              "startOffset": 2524,
              "endOffset": 2528,
              "count": 0
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "set target",
          "ranges": [
            {
              "startOffset": 2544,
              "endOffset": 2704,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "get progress",
          "ranges": [
            {
              "startOffset": 2835,
              "endOffset": 2972,
              "count": 1
            },
            {
              "startOffset": 2895,
              "endOffset": 2904,
              "count": 0
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get started",
          "ranges": [
            {
              "startOffset": 3114,
              "endOffset": 3165,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "get finished",
          "ranges": [
            {
              "startOffset": 3316,
              "endOffset": 3369,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "get elapsed",
          "ranges": [
            {
              "startOffset": 3485,
              "endOffset": 3732,
              "count": 3
            },
            {
              "startOffset": 3599,
              "endOffset": 3731,
              "count": 0
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get estimated",
          "ranges": [
            {
              "startOffset": 3874,
              "endOffset": 4088,
              "count": 2
            },
            {
              "startOffset": 4035,
              "endOffset": 4082,
              "count": 0
            }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "313",
      "url": "file:///Volumes/migration/@eatonfyi/cli/src/base-formatter.ts",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 0,
              "endOffset": 2413,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "simpleStatus",
          "ranges": [
            {
              "startOffset": 71,
              "endOffset": 475,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        }
      ]
    }
  ],
  "timestamp": 275618.141417,
  "source-map-cache": {
    "file:///Volumes/migration/@eatonfyi/cli/src/status-tracker.ts": {
      "lineLengths": [
        18,
        21,
        19,
        2,
        28,
        10,
        13,
        17,
        18,
        22,
        42,
        52,
        54,
        38,
        25,
        9,
        5,
        5,
        7,
        55,
        6,
        57,
        7,
        18,
        28,
        5,
        7,
        26,
        7,
        13,
        39,
        39,
        37,
        9,
        5,
        7,
        67,
        7,
        12,
        41,
        40,
        38,
        9,
        5,
        7,
        82,
        7,
        22,
        31,
        26,
        74,
        5,
        7,
        67,
        7,
        19,
        21,
        41,
        26,
        30,
        24,
        14,
        70,
        28,
        13,
        9,
        5,
        7,
        54,
        7,
        19,
        34,
        5,
        7,
        86,
        7,
        24,
        35,
        5,
        7,
        83,
        24,
        7,
        17,
        50,
        5,
        22,
        21,
        41,
        50,
        66,
        9,
        5,
        7,
        32,
        7,
        18,
        51,
        5,
        23,
        21,
        41,
        60,
        9,
        5,
        7,
        44,
        6,
        57,
        7,
        20,
        30,
        21,
        61,
        5,
        7,
        55,
        6,
        57,
        7,
        19,
        29,
        5,
        7,
        51,
        6,
        70,
        7,
        20,
        30,
        5,
        7,
        29,
        6,
        57,
        7,
        19,
        41,
        46,
        9,
        47,
        50,
        9,
        17,
        5,
        7,
        41,
        6,
        71,
        7,
        21,
        59,
        73,
        9,
        14,
        21,
        9,
        5,
        1,
        31,
        10400
      ],
      "data": {
        "version": 3,
        "file": "/Volumes/migration/@eatonfyi/cli/src/status-tracker.ts",
        "sources": [
          "file:///Volumes/migration/@eatonfyi/cli/src/status-tracker.ts"
        ],
        "names": [],
        "mappings": "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",
        "sourcesContent": [
          "import { StatusData } from \"./status-emitter.js\";\n\nexport type Options = {\n  autoStart: boolean;\n  autoStop: boolean;\n}\n\nconst defaults: Options = {\n  autoStart: false,\n  autoStop: true,\n}\n\nexport class StatusTracker<T extends StatusData = StatusData> {\n  private _data: Partial<T>;\n  private _options: Options;\n\n  private _started: number = 0;\n  private _finished: number = 0;\n\n  private _status: 'ready' | 'running' | 'complete' = 'ready';\n\n  constructor(data: Partial<T> = {}, options: Partial<Options> = {}) {\n    this._options = { ...defaults, ...options };\n    this._data = { target: 0, value: 0, ...data };\n\n    if (this._options.autoStart) {\n      this.start();\n    }\n  };\n\n  /**\n   * Timestamp of the tracker's starting point, in ms\n   * \n   * Note: Returns 0 if the tracker's status is 'ready'\n   */\n  get status() {\n    return this._status;\n  }\n  \n  /**\n   * Starts the tracker.\n   */\n  start() {\n    if (this._status === 'ready') {\n      this._started = Date.now();\n      this._status = 'running';\n    }\n  }\n\n  /**\n   * Stops the tracker, freezing its progress and time estimates.\n   */\n  stop() {\n    if (this._status === 'running') {\n      this._finished = Date.now();\n      this._status = 'complete';\n    }\n  }\n\n  /**\n   * Resets the tracker, setting internal data values to 0 if none are provided.\n   */\n  reset(data: Partial<T> = {}) {\n    this._status = 'ready';\n    this._started = 0;\n    this.update({ value: 0, target: 0, message: undefined, ...data }); \n  }\n\n  /**\n   * Force-updates all tracked status values using a data object.\n   */\n  update(input: Partial<T>) {\n    this.start();\n    if (this._status === 'running') {\n      this._data = {\n        ...this._data,\n        ...input\n      };\n      if (this.target <= this.value && this._options.autoStop) {\n        this.stop();\n      }\n    }\n  }\n\n  /**\n   * Gets the current status message, if one exists.\n   */\n  get message() {\n    return this._data.message;\n  }\n\n  /**\n   * Sets the current status message; setting to `undefined` will clear the message.\n   */\n  set message(input: string | undefined) {\n    this._data.message = input;\n  }\n\n  /**\n   * The current value; usually represents the number of records processed, bytes\n   * transferred, etc.\n   */\n  get value() {\n    return Math.max(this._data.value ?? 0, 0);\n  }\n  set value(input: number) {\n    this.start();\n    if (this._status === 'running') {\n      this._data.value = Math.max(input, 0);\n      this._data.target = Math.max(this.target, this.value);\n    }\n  }\n\n  /**\n   * The current target number\n   */\n  get target() {\n    return Math.max(this._data.target ?? 0, 0);\n  }\n  set target(input: number) {\n    this.start();\n    if (this._status === 'running') {\n      this._data.target = Math.max(input, this.value);\n    }\n  }\n\n  /**\n   * Completion percentage, from 0 to 100.\n   * \n   * Note: Returns 0 if the tracker's status is 'ready'\n   */\n  get progress() {\n    if (this.target === 0) return 0;\n    return Math.min(100 * this.value / this.target, 100);\n  }\n\n  /**\n   * Timestamp of the tracker's starting point, in ms\n   * \n   * Note: Returns 0 if the tracker's status is 'ready'\n   */\n  get started() {\n    return this._started;\n  }\n\n  /**\n   * Timestamp of the tracker's completion, in ms\n   * \n   * Note: Returns 0 if the tracker's status is 'ready' or 'running'\n   */\n  get finished() {\n    return this._finished;\n  }\n\n  /**\n   * The elapsed time in ms\n   * \n   * Note: Returns 0 if the tracker's status is 'ready'\n   */\n  get elapsed() {\n    if (this._status === 'running') {\n      return Date.now() - this._started;\n    } else if (this._status === 'complete') {\n      return this._finished - this._started;\n    }\n    return 0;\n  }\n\n  \n  /**\n   * The estimated time remaining in ms\n   * \n   * Note: Returns 0 if the tracker's status is 'ready' or 'complete'\n   */\n  get estimated() {\n    if (this.value > 0 && this._status === 'running') {\n      return Math.round(this.target * (this.elapsed/this.value));\n    } else {\n      return 0;\n    }\n  }\n}\n\nconst st = new StatusTracker();\n"
        ],
        "sourceRoot": ""
      }
    },
    "file:///Volumes/migration/@eatonfyi/cli/src/base-formatter.ts": {
      "lineLengths": [
        42,
        42,
        75,
        27,
        31,
        31,
        29,
        35,
        33,
        37,
        33,
        25,
        21,
        2,
        1936
      ],
      "data": {
        "version": 3,
        "file": "/Volumes/migration/@eatonfyi/cli/src/base-formatter.ts",
        "sources": [
          "file:///Volumes/migration/@eatonfyi/cli/src/base-formatter.ts"
        ],
        "names": [],
        "mappings": "AAEA,OAAO,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAI1C,MAAM,CAAC,MAAM,YAAY,GAAoB,CAAC,OAAsB,EAAE,EAAE;IACtE,MAAM,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACvE,OAAO,IAAI,CAAC,SAAS,CAAC;QACpB,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,OAAO,EAAE,OAAO,CAAC,OAAO;QACxB,SAAS,EAAE,OAAO,CAAC,SAAS;QAC5B,OAAO,EAAE,OAAO,CAAC,OAAO;QACxB,MAAM,EAAE,QAAQ;KACjB,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;AACnB,CAAC,CAAA",
        "sourcesContent": [
          "import { StatusData } from \"./status-emitter.js\";\nimport { StatusTracker } from \"./status-tracker.js\";\nimport { formatDistance } from 'date-fns';\n\nexport type StatusFormatter<T extends StatusData = StatusData>  = (tracker: StatusTracker<T>) => string;\n\nexport const simpleStatus: StatusFormatter = (tracker: StatusTracker) => {\n  const estimate = formatDistance(tracker.estimated + 65000, Date.now());\n  return JSON.stringify({\n    status: tracker.status,\n    target: tracker.target,\n    value: tracker.value,\n    progress: tracker.progress,\n    elapsed: tracker.elapsed,    \n    estimated: tracker.estimated,\n    message: tracker.message,\n    output: estimate,\n  }, undefined, 2);\n}"
        ],
        "sourceRoot": ""
      }
    }
  }
}
